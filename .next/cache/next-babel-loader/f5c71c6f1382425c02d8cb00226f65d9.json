{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/caique/Projects/Spotatube/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  @font-face {\\n    font-family: 'GothamMedium';\\n    src: url('/fonts/Gotham-Medium.otf');\\n    src: url('/fonts/Gotham-Medium.eot?#iefix') format('embedded-opentype'), url('/fonts/Gotham-Medium.woff') format('woff'), url('/fonts/Gotham-Medium.ttf') format('truetype'), url('/fonts/Gotham-Medium.svg#7510147900d23fa3ad697e74bf146ea2') format('svg');\\n    font-style: normal;\\n    /*font-weight: 200;*/\\n    font-weight: 600;\\n  }\\n\\n  @font-face {\\n    font-family: 'GothamBold';\\n    src: url('/fonts/Gotham-Bold.otf');\\n    src: url('/fonts/Gotham-Bold.eot?#iefix') format('embedded-opentype'), url('/fonts/Gotham-Bold.woff') format('woff'), url('/fonts/Gotham-Bold.ttf') format('truetype'), url('/fonts/Gotham-Bold.svg#6a327a217ddd10461b1acdc4d224fee0') format('svg');\\n    font-style: normal;\\n    /*font-weight: 200;*/\\n    font-weight: 700;\\n  }\\n\\n  html, body, #__next {\\n    width: 100%;\\n    height: 100%;\\n  }\\n\\n  body {\\n    margin: 0 auto;\\n    color: \", \"; \\n    font-family: 'GothamMedium';\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\nexport var theme = {\n  textBlack: '#001F3F',\n  niceBlack: '#0f0101',\n  niceWhite: '#F2F2F2',\n  darkBlue: '#002A4D',\n  primary: '#32B496',\n  highlightPrimary: '#32B496',\n  secondary: 'rgba(8, 8, 8, 0.5)',\n  highlightSecondary: 'rgba(8, 8, 8, 0.5)'\n};\nvar GlobalStyle = createGlobalStyle(_templateObject(), function (props) {\n  return props.theme.niceWhite;\n});\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, __jsx(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, __jsx(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"GraphQL Job Board\"), __jsx(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width, initial-scale=1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), __jsx(ThemeProvider, {\n        theme: theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, __jsx(GlobalStyle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), __jsx(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":{"version":3,"sources":["/home/caique/Projects/Spotatube/pages/_app.tsx"],"names":["React","App","Head","ThemeProvider","createGlobalStyle","theme","textBlack","niceBlack","niceWhite","darkBlue","primary","highlightPrimary","secondary","highlightSecondary","GlobalStyle","props","MyApp","Component","pageProps"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,mBAAjD;AAiBA,OAAO,IAAMC,KAAa,GAAG;AAC3BC,EAAAA,SAAS,EAAE,SADgB;AAE3BC,EAAAA,SAAS,EAAE,SAFgB;AAG3BC,EAAAA,SAAS,EAAE,SAHgB;AAI3BC,EAAAA,QAAQ,EAAE,SAJiB;AAK3BC,EAAAA,OAAO,EAAE,SALkB;AAM3BC,EAAAA,gBAAgB,EAAE,SANS;AAO3BC,EAAAA,SAAS,EAAE,oBAPgB;AAQ3BC,EAAAA,kBAAkB,EAAE;AARO,CAAtB;AAWP,IAAMC,WAAW,GAAGV,iBAAH,oBA0BJ,UAAAW,KAAK;AAAA,SAAIA,KAAK,CAACV,KAAN,CAAYG,SAAhB;AAAA,CA1BD,CAAjB;;IA+BqBQ,K;;;;;;;;;;;;;6BACV;AAAA,wBAC0B,KAAKD,KAD/B;AAAA,UACCE,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAGP,aACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,qCAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE,MAAC,aAAD;AAAe,QAAA,KAAK,EAAEb,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,MAAC,SAAD,eAAea,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CALF,CADF;AAYD;;;;EAhBgCjB,G;;SAAde,K","sourcesContent":["import React from 'react';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\n\nexport interface ITheme {\n  textBlack: string;\n  niceBlack: string;\n  niceWhite: string;\n  darkBlue: string;\n  primary: string;\n  highlightPrimary: string;\n  secondary: string;\n  highlightSecondary: string;\n}\n\nexport interface IThemeWrapper {\n  theme: ITheme;\n}\n\nexport const theme: ITheme = {\n  textBlack: '#001F3F',\n  niceBlack: '#0f0101',\n  niceWhite: '#F2F2F2',\n  darkBlue: '#002A4D',\n  primary: '#32B496',\n  highlightPrimary: '#32B496',\n  secondary: 'rgba(8, 8, 8, 0.5)',\n  highlightSecondary: 'rgba(8, 8, 8, 0.5)'\n};\n\nconst GlobalStyle = createGlobalStyle<IThemeWrapper>`\n  @font-face {\n    font-family: 'GothamMedium';\n    src: url('/fonts/Gotham-Medium.otf');\n    src: url('/fonts/Gotham-Medium.eot?#iefix') format('embedded-opentype'), url('/fonts/Gotham-Medium.woff') format('woff'), url('/fonts/Gotham-Medium.ttf') format('truetype'), url('/fonts/Gotham-Medium.svg#7510147900d23fa3ad697e74bf146ea2') format('svg');\n    font-style: normal;\n    /*font-weight: 200;*/\n    font-weight: 600;\n  }\n\n  @font-face {\n    font-family: 'GothamBold';\n    src: url('/fonts/Gotham-Bold.otf');\n    src: url('/fonts/Gotham-Bold.eot?#iefix') format('embedded-opentype'), url('/fonts/Gotham-Bold.woff') format('woff'), url('/fonts/Gotham-Bold.ttf') format('truetype'), url('/fonts/Gotham-Bold.svg#6a327a217ddd10461b1acdc4d224fee0') format('svg');\n    font-style: normal;\n    /*font-weight: 200;*/\n    font-weight: 700;\n  }\n\n  html, body, #__next {\n    width: 100%;\n    height: 100%;\n  }\n\n  body {\n    margin: 0 auto;\n    color: ${props => props.theme.niceWhite}; \n    font-family: 'GothamMedium';\n  }\n`;\n\nexport default class MyApp extends App {\n  render() {\n    const { Component, pageProps } = this.props;\n\n    return (\n      <React.Fragment>\n        <Head>\n          <title>GraphQL Job Board</title>\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        </Head>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <Component {...pageProps} />\n        </ThemeProvider>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}